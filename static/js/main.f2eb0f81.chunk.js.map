{"version":3,"sources":["components/ChatRoom.tsx","App.tsx","index.js"],"names":["ChatRoom","props","dummy","useRef","messagesRef","firestore","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","auth","currentUser","uid","photoURL","add","text","createdAt","firebase","FieldValue","serverTimestamp","map","msg","ChatMessage","key","id","message","ref","onSubmit","value","onChange","target","placeholder","type","disabled","seconds","messageClass","avatar","className","src","alt","Date","toLocaleTimeString","substring","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","catch","err","console","log","SignOut","signOut","App","useAuthState","hasLoggedIn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAiDeA,MA9Cf,SAAkBC,GAChB,IAAMC,EAAQC,mBACRC,EAAcH,EAAMI,UAAUC,WAAW,YACzCC,EAAQH,EAAYI,QAAQ,aAAaC,MAAM,MAHzB,EAKTC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EALqB,sBAMMC,mBAAS,IANf,mBAMrBC,EANqB,KAMVC,EANU,KAQtBC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQlB,EAAMmB,KAAKC,YAA7BC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZnB,EAAYoB,IAAI,CACpBC,KAAMX,EACNY,UAAWzB,EAAM0B,SAAStB,UAAUuB,WAAWC,kBAC/CP,MACAC,aATgB,OAYlBR,EAAa,IAZK,2CAAH,sDAejB,OACE,6BACE,8BACGH,GACCA,EAASkB,KAAI,SAACC,GAAD,OACX,kBAACC,EAAD,CAAaZ,KAAMnB,EAAMmB,KAAMa,IAAKF,EAAIG,GAAIC,QAASJ,OAEzD,0BAAMK,IAAKlC,KAEb,0BAAMmC,SAAUrB,GACd,2BACEsB,MAAOxB,EACPyB,SAAU,SAACtB,GAAD,OAAOF,EAAaE,EAAEuB,OAAOF,QACvCG,YAAY,mBAEd,4BAAQC,KAAK,SAASC,SAAwB,KAAd7B,GAAhC,WAUR,SAASkB,EAAY/B,GAAa,IAuBT2C,EAvBQ,EACY3C,EAAMkC,QAAzCV,EADuB,EACvBA,KAAMH,EADiB,EACjBA,IAAKC,EADY,EACZA,SAAUG,EADE,EACFA,UACvBmB,EAAevB,IAAQrB,EAAMmB,KAAKC,YAAYC,IAAM,OAAS,WAC7DwB,EACJvB,GAAY,wDAEd,OACE,yBAAKwB,UAAU,eACb,yBAAKA,UAAS,kBAAaF,IACzB,yBAAKG,IAAKF,EAAQG,IAAI,WACtB,2BAAIxB,IAGLC,EACC,uBAAGqB,UAAU,cASIH,EATyBlB,EAAUkB,QAU/C,IAAIM,KAAe,IAAVN,GAERO,qBAAqBC,UAAU,EAAG,KAVxC,uBAAGL,UAAU,aAAb,Q,wCC3DRpB,IAAS0B,cAAc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YACE,6EACFC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMxC,EAAOO,IAASP,OAChBf,EAAYsB,IAAStB,YAqB3B,SAASwD,IAQP,OACE,yBAAKd,UAAU,UACb,iDACA,4BAAQA,UAAU,UAAUe,QAVP,WACvB,IAAMC,EAAW,IAAIpC,IAASP,KAAK4C,mBACnC5C,EAAK6C,gBAAgBF,GAAUG,OAAM,SAACC,GACpCC,QAAQC,IAAI,0BAA2BF,QAOvC,uBAGA,4DAKN,SAASG,IACP,OACElD,EAAKC,aACH,4BAAQ0B,UAAU,WAAWe,QAAS,kBAAM1C,EAAKmD,YAAjD,YAOSC,MAhDf,WAAgB,IAAD,EACSC,YAAarD,GAA5BsD,EADM,oBAEb,OACE,yBAAK3B,UAAU,OACb,gCACE,wBAAIA,UAAU,cAAd,cACA,kBAACuB,EAAD,OAEF,iCACGI,EACC,kBAAC,EAAD,CAAU/C,SAAUA,IAAUP,KAAMA,EAAMf,UAAWA,IAErD,kBAACwD,EAAD,SC7BVc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f2eb0f81.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfunction ChatRoom(props: any) {\n  const dummy = useRef() as React.MutableRefObject<HTMLInputElement>;\n  const messagesRef = props.firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(2500);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = props.auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: props.firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue(\"\");\n  };\n\n  return (\n    <div>\n      <main>\n        {messages &&\n          messages.map((msg: any) => (\n            <ChatMessage auth={props.auth} key={msg.id} message={msg} />\n          ))}\n        <span ref={dummy}></span>\n      </main>\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"Type a message\"\n        />\n        <button type=\"submit\" disabled={formValue === \"\"}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatRoom;\n\nfunction ChatMessage(props: any) {\n  const { text, uid, photoURL, createdAt } = props.message;\n  const messageClass = uid === props.auth.currentUser.uid ? \"sent\" : \"received\";\n  const avatar =\n    photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\";\n\n  return (\n    <div className=\"messageTime\">\n      <div className={`message ${messageClass}`}>\n        <img src={avatar} alt=\"avatar\" />\n        <p>{text}</p>\n      </div>\n      {/* Checks if timeStamp is available, if yes, shows the time, if not, shows \"now\" */}\n      {createdAt ? (\n        <p className=\"timeStamp\">{getReadableTime(createdAt.seconds)}</p>\n      ) : (\n        <p className=\"timeStamp\">now</p>\n      )}\n    </div>\n  );\n}\n\n// Gets time from seconds (as stored in firebase)\nfunction getReadableTime(seconds: number) {\n  let unix = new Date(seconds * 1000);\n  // This gets [0:5] of the time string which give time in this format: 09:41\n  return unix.toLocaleTimeString().substring(0, 5);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport firebase from \"firebase/app\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBHlMbSz_nPU28iII28ymDb6U7nTz_yJEo\",\n  authDomain: \"anonyspace-1b5ff.firebaseapp.com\",\n  databaseURL:\n    \"https://anonyspace-1b5ff-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"anonyspace-1b5ff\",\n  storageBucket: \"anonyspace-1b5ff.appspot.com\",\n  messagingSenderId: \"357161899322\",\n  appId: \"1:357161899322:web:c75a6d10add2f5448c6c03\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [hasLoggedIn] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"anonyspace\">anonyspace</h1>\n        <SignOut />\n      </header>\n      <section>\n        {hasLoggedIn ? (\n          <ChatRoom firebase={firebase} auth={auth} firestore={firestore} />\n        ) : (\n          <SignIn />\n        )}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).catch((err) => {\n      console.log(\"signInWithGoogle -> err\", err);\n    });\n  };\n\n  return (\n    <div className=\"center\">\n      <h1>Minimal Chat Room</h1>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n      <p>log in to access anonyspace.</p>\n    </div>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}